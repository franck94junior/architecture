# Architecture Applicative Open Source

Cette architecture applicative est con√ßue pour une application mobile (Flutter), web (Angular) et backend (NestJS), avec une infrastructure compl√®te bas√©e sur des outils open source et orchestr√©e via Docker Compose.

---

## üß± Technologies utilis√©es

### Frontend
- **Mobile** : Flutter
- **Web** : Angular
- **State Management** : Riverpod / Bloc (Flutter), NgRx (Angular)

### Backend
- **Framework** : NestJS
- **API** : REST ou GraphQL
- **Authentification** : Keycloak (OpenID Connect, OAuth2), JWT
- **ORM** : TypeORM ou Prisma

### Base de donn√©es et stockage
- **Base de donn√©es** : PostgreSQL
- **Cache** : Redis
- **Stockage d‚Äôobjets** : MinIO (compatible S3)

### Observabilit√©
- **Monitoring** : Prometheus + Grafana
- **Logging** : ELK Stack (Elasticsearch, Logstash, Kibana)
- **Tracing** : Jaeger + OpenTelemetry

### Infrastructure
- **Conteneurisation** : Docker
- **Orchestration** : Docker Compose
- **CI/CD** : GitLab CI, Jenkins, Drone CI
- **Infrastructure as Code** : Terraform ou Pulumi
